BACKUP ~cd_appraiser/backup~ // location to store files for
SUPPORT ~http://gibberlings3.net/forums/index.php?showforum=34~ // URL displayed if install fails
AUTO_EVAL_STRINGS

ALWAYS

  ACTION_IF ((FILE_EXISTS ~dlc/sod-dlc.zip~) OR (FILE_EXISTS ~sod-dlc.zip~)) THEN BEGIN FAIL @1001 END // DLC Merge check

  // convert strings to UTF-8 for BGEE/BG2EE
  ACTION_DEFINE_ARRAY cdreload BEGIN game_strings END
  ACTION_DEFINE_ARRAY cdnoconvert BEGIN weidu game_strings_ee game_strings_oiwd game_strings_iwd2 END
  LAF HANDLE_CHARSETS INT_VAR infer_charsets = 1 STR_VAR tra_path = ~cd_appraiser/lang~ noconvert_array = cdnoconvert reload_array = cdreload END
    
END

VERSION ~v2~

README ~cd_appraiser/lang/%LANGUAGE%/readme-cd_appraiser.html~ ~cd_appraiser/readme-cd_appraiser.html~

LANGUAGE
  ~English~
  ~en_us~
  ~cd_appraiser/lang/en_us/game_strings.tra~
  ~cd_appraiser/lang/en_us/weidu.tra~

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// Bardic Appraisal                                 \\\\\
/////                                                  \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

BEGIN @1000
REQUIRE_PREDICATE !GAME_IS ~pst pstee~ @1002
LABEL ~cd_bardic_appraisal~

MKDIR ~weidu_external/cd_appraiser~

// strings with utf-8 characters for matching
ACTION_IF GAME_IS ~bgee bg2ee eet iwdee~ BEGIN
  LOAD_TRA ~cd_appraiser/lang/%LANGUAGE%/game_strings_ee.tra~
END 

// oiwd has slightly different category names
ACTION_IF GAME_IS ~iwd how totlm~ BEGIN
  LOAD_TRA ~cd_appraiser/lang/%LANGUAGE%/game_strings_oiwd.tra~
END 

// oiwd has slightly different category names
ACTION_IF GAME_IS ~iwd2~ BEGIN
  LOAD_TRA ~cd_appraiser/lang/%LANGUAGE%/game_strings_iwd2.tra~
END 

OUTER_SET default_bard = 9562
OUTER_SET valid_range = 78 // don't bother with item types > 77 until I see otherwise
  
ACTION_IF GAME_IS iwdee BEGIN
  OUTER_SET default_bard = 37236
END  

OUTER_FOR (type = 0 ; type < valid_range ; ++type) BEGIN

  COPY ~cd_appraiser/files/item_type_array.tpa~ ~weidu_external/cd_appraiser/item_type_array.tpa~ EVALUATE_BUFFER
  REINCLUDE ~weidu_external/cd_appraiser/item_type_array.tpa~
  OUTER_SPRINT $cd_valid_types("%type%") "%string%"  
  
END   

ACTION_FOR_EACH invalid IN 28 33 BEGIN // exclude gold pieces amd h2h weapons
  OUTER_SET $cd_valid_types("%invalid%") = 0
END

ACTION_IF GAME_IS ~iwd how totlm~ BEGIN

  COPY ~cd_appraiser/files/cdapprai_iwd.bam~ ~override/cdapprai.bam~ // no 'rock' background
  COPY ~cd_appraiser/files/cdapprai_v9.cre~  ~override/cdapprai.cre~

  // since no OR to suppress categories, be a little more strict with the categories
  ACTION_FOR_EACH invalid IN 12 36 37 38 42 55 BEGIN // exclude bg shield category, broken gear categories
    OUTER_SET $cd_valid_types("%invalid%") = 0
  END

END ELSE BEGIN

  ACTION_IF GAME_IS ~iwd2~ BEGIN
  
    COPY ~cd_appraiser/files/cdapprai_v22.cre~ ~override/cdapprai.cre~
         ~cd_appraiser/files/cdapprai_iwd.bam~ ~override/cdapprai.bam~ // no 'rock' background
    
  END ELSE BEGIN  

    COPY ~cd_appraiser/files/cdapprai.cre~ ~override~
         ~cd_appraiser/files/cdapprai.bam~ ~override~

  END
  
END  

COPY_EXISTING ~cdapprai.cre~ ~override~
  SAY 0x08 @112     
  SAY 0x0c @112 

// if game supports OR(x), use it
OUTER_SPRINT or_trigger ~~  
ACTION_IF RESOURCE_CONTAINS ~trigger.ids~ ~[ %TAB%]OR(~ BEGIN
  OUTER_SPRINT or_trigger ~OR(0)~
END  

// if game supports PartyHasItemIdentified, use it
OUTER_SPRINT item_trigger ~PartyHasItem~ 
ACTION_IF RESOURCE_CONTAINS ~trigger.ids~ ~[ %TAB%]PartyHasItemIdentified(~ BEGIN
  OUTER_SPRINT item_trigger ~PartyHasItemIdentified~
END  

// games without LOCALS variables have clunkier dialogue
OUTER_SPRINT text_another_item @103
OUTER_SPRINT action_set_locals ~~~~~ DO ~SetGlobal("cd_appraisal","LOCALS",%index%)~ ~~~~~
ACTION_IF GAME_IS ~bg1 totsc iwd how totlm~ BEGIN // games without LOCALS

  OUTER_SPRINT text_another_item @118
  OUTER_SPRINT action_set_locals ~~
  COPY ~cd_appraiser/files/template.d~ ~weidu_external/cd_appraiser/template.d~ 
  
END ELSE BEGIN

  COPY ~cd_appraiser/files/template.d~ ~weidu_external/cd_appraiser/template.d~ 
    REPLACE_TEXTUALLY ~//trans_item_type~ ~~~~~EXTEND_TOP cdapprai 0
  IF ~Global("cd_appraisal","LOCALS",%item_type%)~ THEN REPLY @114 GOTO cd_item_type_%item_type%
END~~~~~

END

// add ability to bard using clab tables if available, otherwise script it
ACTION_IF !FILE_EXISTS_IN_GAME ~kitlist.2da~ BEGIN // basically, oiwd and obg
  
  COPY_EXISTING ~cdapprai.cre~ ~override~
    LPF DELETE_EFFECT INT_VAR match_opcode = 287 END
    WRITE_LONG 0x28 0xd300 // animation: bird
  
  COPY ~cd_appraiser/files/cdapprai_bg.baf~ ~weidu_external/cd_appraiser/cdapprai.baf~

  // also lack RES actions for arbitrary spell names
  ADD_SPELL ~cd_appraiser/files/cdapprai.spl~ 3 1 CD_BARDIC_APPRAISAL    
    SPRINT CD_BARDIC_APPRAISAL_res ~%DEST_RES%~
    LPF ALTER_EFFECT STR_VAR match_resource = cdapprai resource = EVAL ~%CD_BARDIC_APPRAISAL_res%~ END
    LPF ALTER_EFFECT INT_VAR match_opcode = 177 opcode = 67 STR_VAR resource = cdapprai END
    SAY 0x08 @112     
    SAY 0x0c @112        
    SAY 0x50 @113     
    SAY 0x54 @113
    
  ADD_SPELL ~cd_appraiser/files/cd_addbg.spl~ 3 1 CD_ADD_BARDIC_APPRAISAL
    WRITE_ASCIIE 0xae ~%CD_BARDIC_APPRAISAL_res%~ #8
    
  ACTION_FOR_EACH script IN dplayer dplayer2 dplayer3 BEGIN
  
    ACTION_IF FILE_EXISTS_IN_GAME ~%script%.bcs~ BEGIN
  
      EXTEND_BOTTOM ~%script%.bcs~ ~cd_appraiser/files/dplayer.baf~
      
    END

  END    

END ELSE BEGIN
  
  COPY ~cd_appraiser/files/cdapprai.baf~ ~weidu_external/cd_appraiser/cdapprai.baf~

  ACTION_IF GAME_IS ~iwd2~ BEGIN // no effs for iwd2, need to be a SPIN

    COPY ~cd_appraiser/files/cdapprai_v2.spl~ ~override/cdapprai.spl~ 
    
    COPY_EXISTING ~listinnt.2da~ ~override~
      COUNT_2DA_ROWS 2 count
      READ_2DA_ENTRY (count - 1) 0 2 entry
      SET entry += 1
      
    APPEND ~listinnt.2da~ ~%entry% cdapprai~  
    
    ACTION_BASH_FOR ~characters~ ~^.+\chr$~ BEGIN // fix existing chr files
    
      COPY ~%BASH_FOR_FILESPEC%~ ~%BASH_FOR_FILESPEC%~
        READ_LONG 0x28 cre_off
        READ_BYTE (cre_off + 0x8c) bard_level
        PATCH_IF bard_level BEGIN
          READ_LONG  (cre_off + 0x5fa) abil_off
          READ_LONG  (cre_off + 0x5fe) abil_num
          SET add_ability = 1
          FOR (index = 0 ; index < abil_num ; ++index) BEGIN
            READ_LONG (cre_off + abil_off) + (index * 0x10) entry_check
            PATCH_PRINT ~checking %entry_check% on %BASH_FOR_FILESPEC%~
            PATCH_IF entry_check = entry BEGIN 
              SET add_ability = 0 // don't add, already present
              SET index = abil_num // kill loop 
            END
          END
          PATCH_IF add_ability BEGIN
            PATCH_PRINT ~adding ability to %BASH_FOR_FILESPEC%~
            WRITE_LONG (cre_off + 0x5fe) (THIS + 1) // add an ability
            // fix offsets for adding abilities
            FOR (offset = (cre_off + 0x3ba) ; offset < (cre_off + 0x4b3) ; offset = offset + 0x04) BEGIN // spell list offsets
              READ_LONG offset offset_check
              PATCH_IF offset_check > abil_off BEGIN
                WRITE_LONG offset (THIS + 0x10)
              END
            END  
            FOR (offset = (cre_off + 0x5b2) ; offset < (cre_off + 0x5d3) ; offset = offset + 0x04) BEGIN // domain offsets
              READ_LONG offset offset_check
              PATCH_IF offset_check > abil_off BEGIN
                WRITE_LONG offset (THIS + 0x10)
              END
            END     
            PATCH_FOR_EACH offset IN 0x602 0x60a 0x612 0x616 0x61e BEGIN
              READ_LONG (cre_off + offset) offset_check
              PATCH_IF offset_check > abil_off BEGIN
                WRITE_LONG (cre_off + offset) (THIS + 0x10)
              END
            END      
            WRITE_LONG 0x2c (THIS + 0x10) // cre structure size
            WRITE_LONG ((cre_off + abil_off) + 0x00 + (0x10 * abil_num)) (THIS +1)
            WRITE_LONG ((cre_off + abil_off) + 0x04 + (0x10 * abil_num)) (THIS +1)
            INSERT_BYTES (cre_off + abil_off) 0x10
              WRITE_LONG ((cre_off + abil_off) + 0x00) entry // from listinnt value above
              WRITE_LONG ((cre_off + abil_off) + 0x04) 1     // num memorizable
              WRITE_LONG ((cre_off + abil_off) + 0x08) 1     // num remaining
          END // end check for existing ability    
        END // end bard_level check
        BUT_ONLY   
  
    END 
  END ELSE BEGIN
  
    COPY ~cd_appraiser/files/cdapprai.eff~ ~override~
         ~cd_appraiser/files/cdapprai.spl~ ~override~
    
  END  
  
  COPY_EXISTING ~cdapprai.spl~ ~override~
    SAY 0x08 @112     
    SAY 0x0c @112        
    SAY 0x50 @113     
    SAY 0x54 @113       
    SPRINT CD_BARDIC_APPRAISAL_res ~%DEST_RES%~

  ACTION_CLEAR_ARRAY cd_bard_clabs
  ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_bard_clabs BEGIN // start with base class tables
    clabba01 => "%default_bard%" // generic bard abilities
  END
  
  ACTION_IF !GAME_IS ~iwd2~ BEGIN  
      
    // add kit tables dynamically by reading kitlist
    COPY_EXISTING ~kitlist.2da~ ~override~
      COUNT_2DA_ROWS 9 rows
      FOR (index = 2 ; index < rows ; ++index) BEGIN // skip reserve row
        READ_2DA_ENTRY index 8 9 class
        PATCH_IF class = 5 BEGIN
          READ_2DA_ENTRY index 4 9 desc
          READ_2DA_ENTRY index 5 9 clab
          DEFINE_ASSOCIATIVE_ARRAY cd_bard_clabs BEGIN "%clab%" => "%desc%" END
        END  
      END
      BUT_ONLY
  
  END  
      
  ACTION_PHP_EACH cd_bard_clabs AS clab => desc_strref BEGIN 
    
    ACTION_IF FILE_EXISTS_IN_GAME ~%clab%.2da~ BEGIN 
      APPEND ~%clab%.2da~ ~ABILITYX GA_cdapprai CDREPLACE~ UNLESS ~GA_CDAPPRAI~

      COPY_EXISTING ~%clab%.2da~ ~override~
        COUNT_2DA_COLS cols
        FOR (index = 3 ; index < cols ; ++index) BEGIN
          REPLACE_TEXTUALLY ~CDREPLACE~ ~**** CDREPLACE~
        END
        REPLACE_TEXTUALLY ~CDREPLACE~ ~****~
        PRETTY_PRINT_2DA
        BUT_ONLY
   
      ACTION_GET_STRREF desc_strref desc
      OUTER_PATCH_SAVE desc "%desc%" BEGIN
        PATCH_IF ((desc_strref = default_bard) AND (!GAME_IS ~iwd2~)) BEGIN
          SPRINT old @115 // main bard descript doesn't have 'disadvantages' line
          SPRINT break ~~
        END ELSE BEGIN  
          SPRINT old @116
          SPRINT break ~
~ // extra line is intentional
        END  
        SPRINT new @117
        REPLACE_TEXTUALLY ~%new%~ ~~ // purge in case the text is already there
        REPLACE_TEXTUALLY ~[%LNL%%MNL%%WNL%]*\([%LNL%%MNL%%WNL%]\)\(%old%\)~ ~\1%new%%break%\2~ // swap text
      END
      STRING_SET_EVALUATE desc_strref "%desc%"  

    END
    
  END  
  
END  

COMPILE ~weidu_external/cd_appraiser/cdapprai.baf~
        ~cd_appraiser/files/appraise.d~

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  READ_LONG 0x18 flags ELSE 0
  PATCH_IF ((flags & BIT2) = BIT2) BEGIN // if droppable
    READ_SHORT 0x1c item_type
    PATCH_IF ((item_type >= 0) AND (item_type < valid_range) AND ($cd_valid_types("%item_type%") != 0))BEGIN // skip item types that aren't covered
      SET type_name = $cd_valid_types("%item_type%")
      READ_LONG 0x0c string
      PATCH_IF NOT (string >= 0 && string < 9999999) BEGIN READ_LONG 0x08 string END // try unidentified name if identified name invalid
      PATCH_IF (string >= 0 && string < 9999999) BEGIN                               // skip entirely if unidentified is also an invlaid string
        READ_LONG 0x34 price
        SET critical_item = 0
        PATCH_IF ((flags & BIT0) = BIT0) BEGIN SET critical_item = 1 END
        DEFINE_ASSOCIATIVE_ARRAY ~cd_%item_type%_array~ BEGIN "%string%","%critical_item%","%SOURCE_RES%" => "%price%" END
        PATCH_IF !FILE_EXISTS ~weidu_external/cd_appraiser/template_%item_type%.d~ BEGIN
          INNER_ACTION BEGIN
            COPY ~weidu_external/cd_appraiser/template.d~ ~weidu_external/cd_appraiser/template_%item_type%.d~
              EVALUATE_BUFFER // should set item_type
          END
        END      
      END
    END  
  END  
  BUT_ONLY
  
OUTER_FOR (index = valid_range ; index >= 0 ; --index) BEGIN
 
  ACTION_IF FILE_EXISTS ~weidu_external/cd_appraiser/template_%index%.d~ BEGIN
    COPY ~weidu_external/cd_appraiser/template_%index%.d~ ~weidu_external/cd_appraiser/template_%index%.d~
      PHP_EACH ~cd_%index%_array~ AS params => price BEGIN
        PATCH_IF price BEGIN // if price != 0, create string for it
          SPRINT appraised @109
          INNER_PATCH_SAVE appraised ~%appraised%~ BEGIN
            REPLACE_TEXTUALLY EXACT_MATCH ~PRICE~ ~%price%~
          END 
        END ELSE BEGIN    
          SPRINT appraised @110 // otherwise use 'no value' line
        END          
        REPLACE_EVALUATE ~OR(\([0-9]+\))~ BEGIN // this will match (and therefore do) nothing on games w/o OR triggers  
          SET or_count = (%MATCH1% + 1)
        END ~OR(%or_count%) %item_trigger%("%params_2%")~  
        REPLACE_TEXTUALLY ~\(//cd_insert_reply_here\)~ ~~~~~    IF ~%item_trigger%("%params_2%")~ THEN REPLY #%params_0% %action_set_locals% GOTO ~cd_%params_2%~
\1~~~~~
        REPLACE_TEXTUALLY ~\(//cd_insert_state_here\)~ ~~~~~  IF ~~ BEGIN ~cd_%params_2%~ SAY ~%appraised%~ 
    IF ~~ THEN GOTO %params_1%
  END  
\1~~~~~
      END

    COMPILE ~weidu_external/cd_appraiser/template_%index%.d~ EVALUATE_BUFFER
    
  END

END  
